name: Build/push
description: Build a Docker image and push to ECR
inputs:
  aws-access-key-id:
    description: AWS_ACCESS_KEY_ID
    required: true
  aws-secret-access-key:
    description: AWS_SECRET_ACCESS_KEY
    required: true
  aws-region:
    description: AWS region to use
    required: true
    default: us-east-1
  custom-tag:
    description: Custom tag for image in ECR repo
    required: false
    default: ''
  docker-repo:
    description: ECR Docker repo to push to
    required: true
  dockerfile-path:
    description: Path to the repo's Dockerfile
    required: false
    default: '.'
  docker-additional-args:
    description: Additional arguments to pass to call to docker
    required: false
    default: ''
  docker-additional-tags:
    description: Additional tags for the image, separated by spaces
    required: false
    default: ''
outputs:
  docker-tag:
    description: Docker Tag
    value: ${{ steps.docker.outputs.tag }}
runs:
  using: composite
  steps:
    - run: test -n "${{ inputs.aws-access-key-id }}" -a -n "${{ inputs.aws-secret-access-key }}"
      shell: bash
    - run: >
        if [[ "${{ inputs.custom-tag }}" == '' ]]
        then
          echo "::set-output name=tag::${{ inputs.docker-repo }}:git-$(git rev-parse --short HEAD)"
        else
          echo "::set-output name=tag::${{ inputs.docker-repo }}:${{ inputs.custom-tag }}"
        fi
      id: docker
      shell: bash
    - run: >
        docker build
        ${{ inputs.docker-additional-args }}
        --pull -t ${{ steps.docker.outputs.tag }} ${{ inputs.dockerfile-path }}
      shell: bash
    - run: >
        aws ecr get-login-password --region ${{ inputs.aws-region }}
        | docker login --username AWS --password-stdin ${{ inputs.docker-repo }}
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
      shell: bash
    - run: docker push ${{ steps.docker.outputs.tag }}
      shell: bash
    - run: >
        for tag in ${{ inputs.docker-additional-tags }}; do
          docker tag ${{ steps.docker.outputs.tag }} ${{ inputs.docker-repo }}:$tag
          docker push ${{ inputs.docker-repo }}:$tag
        done
      shell: bash
      if: ${{ inputs.docker-additional-tags != '' }}
